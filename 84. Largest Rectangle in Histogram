class Solution {
    public int largestRectangleArea(int[] heights) {
        List<Integer> gtl = new ArrayList<>();
        List<Integer> gtr = new ArrayList<>();
        
        Stack<Integer> stack = new Stack();
        for(int i=0; i<heights.length; i++){
            while(!stack.isEmpty() && heights[stack.peek()] >= heights[i]){
                stack.pop();
            }
            if(stack.isEmpty()) gtl.add(-1);
            else gtl.add(stack.peek());
            stack.push(i);
        }
        
        stack.clear();
        for(int i=heights.length-1; i>=0; i--){
            while(!stack.isEmpty() && heights[stack.peek()] >= heights[i]){
                stack.pop();
            }
            if(stack.isEmpty()) gtr.add(heights.length);
            else gtr.add(stack.peek());
            stack.push(i);
        }
        
        Collections.reverse(gtr);
        // System.out.println(gtl);
        // System.out.println(gtr);
        int max=0;
        for(int i=0; i<gtr.size(); i++){
            max = Math.max(max, (gtr.get(i) - gtl.get(i) - 1) * heights[i]);
        }
        return max;
        
    }
}
