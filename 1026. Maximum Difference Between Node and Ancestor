/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int ans = Integer.MIN_VALUE;
    public int maxAncestorDiff(TreeNode root) {
        getMaxAncestorDiff(root, root.val, root.val);
        return ans;
    }
    
    void getMaxAncestorDiff(TreeNode root, int max, int min){
        if(root == null) return;
        
        int possible = Math.max(Math.abs(max - root.val), Math.abs(min - root.val));
        ans = Math.max(ans, possible);
        min = Math.min(root.val, min);
        max = Math.max(max, root.val);
        
        getMaxAncestorDiff(root.left, max, min);
        getMaxAncestorDiff(root.right, max, min);
    }
}
