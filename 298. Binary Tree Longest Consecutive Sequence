/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max = 0, count = 1, right = 0;
    public int longestConsecutive(TreeNode root) {
        getLongetConsecutive(root, root.val, 0);
        return max;
    }
    
    void getLongetConsecutive(TreeNode root, int target, int count){
        if(root == null) return;
        else if(root.val == target){
            count+=1;
        }
        else {
            count = 1;
            target = root.val+1;
        }
        max = Math.max(max, count);
        getLongetConsecutive(root.left, root.val + 1, count);
        getLongetConsecutive(root.right, root.val + 1, count);
        
    }
}
