class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        getPartitions(s, 0, s.length() - 1, res, new ArrayList<String>());
        return res;
        
    }
    
    void getPartitions(String s, int i, int j, List<List<String>> res, List<String> temp){
        if(i > j){
            res.add(new ArrayList<>(temp));
            return;
        }
        for(int k=i; k<=j; k++){
            if(checkPalindrome(s, i, k)){
                temp.add(s.substring(i, k+1));
                getPartitions(s, k+1, s.length() - 1, res, temp);
                temp.remove(temp.size() - 1);
            }
        }
    }
    
    boolean checkPalindrome(String s, int i, int j){
        while(i < j){
            if(s.charAt(i) != s.charAt(j)) return false;
            i++;
            j--;
        }
        return true;
    }
}
